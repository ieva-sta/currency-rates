version: '3'
services:
  nginx:
    image: ${REGISTRY}/${PROJECT}/nginx
    build:
      context: .
      dockerfile: dockerfile-nginx
    container_name: ${PROJECT}-nginx
    environment:
      - VIRTUAL_HOST=${PROJECT}.local
      - TZ=${APP_TIMEZONE}
    command: /bin/sh -c "chown -R 1000:1000 /app && envsubst '$$VIRTUAL_HOST' < /etc/nginx/conf.d/default.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
    restart: always
    depends_on:
      - php
      - postgres
    links:
      - php
  php:
    container_name: ${PROJECT}-php
    image: ${REGISTRY}/${PROJECT}/php
    working_dir: '/app'
    build:
      context: .
      dockerfile: dockerfile-php
      args:
        - PHP_VERSION=${PHP_VERSION}
        - APP_ENV=${APP_ENV}
    restart: always
    command: /bin/sh -c "crontab -u www-data /usr/crontab && /usr/bin/supervisord -c /etc/supervisor/conf.d/supervisord.conf"
    env_file: .env
    environment:
      TZ: ${APP_TIMEZONE}
      DB_CONNECTION: pgsql
      DB_HOST: ${DB_HOST}
      DB_PORT: 5432
      DB_DATABASE: ${DB_DATABASE}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_USERNAME: ${DB_USERNAME}
    depends_on:
      - postgres
      - redis
    links:
      - postgres
      - redis
  postgres:
    image: postgres:11-alpine
    container_name: ${PROJECT}-postgres
    restart: always
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
  redis:
    image: redis:alpine
    container_name: ${PROJECT}-redis
    restart: always
    environment:
      - TZ=${APP_TIMEZONE}
networks:
  default:
    external:
      name: nginx-proxy
